     1                                  ; file.asm
     2                                  section .data
     3                                  ; Выражения, используемые для условного ассемблирования.
     4                                        CREATE             equ    1
     5                                        OVERWRITE          equ    1
     6                                        APPEND             equ    1
     7                                        O_WRITE            equ    1
     8                                        READ               equ    1
     9                                        O_READ             equ    1
    10                                        DELETE             equ    1
    11                                        
    12                                  ; Символические имена системных вызовов.
    13                                        NR_read            equ    0
    14                                        NR_write           equ    1
    15                                        NR_open            equ    2
    16                                        NR_close           equ    3
    17                                        NR_lseek           equ    8
    18                                        NR_create          equ    85
    19                                        NR_unlink          equ    87
    20                                        
    21                                  ; Флаги созданияи состояния файлов.
    22                                        O_CREAT            equ    00000100q
    23                                        O_APPEND           equ    00002000q
    24                                        
    25                                  ; Режимы доступа.
    26                                        O_RDONLY           equ    000000q
    27                                        O_WRONLY           equ    000001q
    28                                        O_RDWR             equ    000002q
    29                                        
    30                                  ; Режимы при создании файла (права доступа).
    31                                        S_IRUSR            equ    00400q                              ; Право на чтение для владельца.
    32                                        S_IWUSR            equ    00200q                              ; Право на запись для владельца.
    33                                        NL                 equ    0xa
    34                                        bufferlen          equ    64
    35 00000000 7465737466696C652E-           fileName           db     "testfile.txt",0
    35 00000009 74787400           
    36 0000000D 0000000000000000              FD                 dq     0                                   ; Дескриптор файла.
    37                                        
    38                                  ; Другие данные.
    39 00000015 312E2048656C6C6F2E-           text1              db     "1. Hello...to everyone!",NL,0
    39 0000001E 2E2E746F2065766572-
    39 00000027 796F6E65210A00     
    40 0000002E 1800000000000000              len1               dq     $-text1-1                           ; Удаление 0.
    41 00000036 322E20486572652049-           text2              db     "2. Here I am!",NL,0
    41 0000003F 20616D210A00       
    42 00000045 0E00000000000000              len2               dq     $-text2-1                           ; Удаление 0.
    43 0000004D 332E20416C69666520-           text3              db     "3. Alife and kicking!",NL,0
    43 00000056 616E64206B69636B69-
    43 0000005F 6E67210A00         
    44 00000064 1600000000000000              len3               dq     $-text3-1                           ; Удаление 0.
    45 0000006C 4164696F732121210A-           text4              db     "Adios!!!",NL,0
    45 00000075 00                 
    46 00000076 0900000000000000              len4               dq     $-text4-1                           ; Удаление 0.
    47                                        
    48                                        
    49 0000007E 6572726F7220637265-           error_Create       db     "error creating file",NL,0
    49 00000087 6174696E672066696C-
    49 00000090 650A00             
    50 00000093 6572726F7220636C6F-           error_Close        db     "error closing file",NL,0
    50 0000009C 73696E672066696C65-
    50 000000A5 0A00               
    51 000000A7 6572726F7220777269-           error_Write        db     "error writing to file",NL,0
    51 000000B0 74696E6720746F2066-
    51 000000B9 696C650A00         
    52 000000BE 6572726F72206F7065-           error_Open         db     "error opening file",NL,0
    52 000000C7 6E696E672066696C65-
    52 000000D0 0A00               
    53 000000D2 6572726F7220617070-           error_Append       db     "error appending to file",NL,0
    53 000000DB 656E64696E6720746F-
    53 000000E4 2066696C650A00     
    54 000000EB 6572726F722064656C-           error_Delete       db     "error deleting file",NL,0
    54 000000F4 6574696E672066696C-
    54 000000FD 650A00             
    55 00000100 6572726F7220726561-           error_Read         db     "error reading file",NL,0
    55 00000109 64696E672066696C65-
    55 00000112 0A00               
    56 00000114 6572726F7220707269-           error_Print        db     "error printing string",NL,0
    56 0000011D 6E74696E6720737472-
    56 00000126 696E670A00         
    57 0000012B 6572726F7220706F73-           error_Position     db     "error positioning in file",NL,0
    57 00000134 6974696F6E696E6720-
    57 0000013D 696E2066696C650A00 
    58                                        
    59                                        
    60 00000146 46696C652063726561-           success_Create     db     "File created and opened",NL,0
    60 0000014F 74656420616E64206F-
    60 00000158 70656E65640A00     
    61 0000015F 46696C6520636C6F73-           success_Close      db     "File closed",NL,NL,0
    61 00000168 65640A0A00         
    62 0000016D 5772697474656E2074-           success_Write      db     "Written to file",NL,0
    62 00000176 6F2066696C650A00   
    63 0000017E 46696C65206F70656E-           success_Open       db     "File opened for R/W",NL,0
    63 00000187 656420666F7220522F-
    63 00000190 570A00             
    64 00000193 46696C65206F70656E-           success_Append     db     "File opened for appending",NL,0
    64 0000019C 656420666F72206170-
    64 000001A5 70656E64696E670A00 
    65 000001AE 46696C652064656C65-           success_Delete     db     "File deleted",NL,0
    65 000001B7 7465640A00         
    66 000001BC 52656164696E672066-           success_Read       db     "Reading file",NL,0
    66 000001C5 696C650A00         
    67 000001CA 506F736974696F6E65-           success_Position   db     "Positioned in file",NL,0
    67 000001D3 6420696E2066696C65-
    67 000001DC 0A00               
    68                                        
    69                                        
    70                                  section .bss
    71 00000000 <res 40h>                     buffer             resb   bufferlen
    72                                  section .text
    73                                        global main
    74                                  main:
    75 00000000 55                      push  rbp                                            ; Пролог функции.
    76 00000001 4889E5                  mov   rbp, rsp                                       ; Пролог функции. 
    77                                  %IF CREATE
    78                                  ; СОЗДАНИЕ И ОТКРЫТИЕ ФАЙЛА, ЗАТЕМ ЗАКРЫТИЕ. ---------------------------------------
    79                                  ; Создание и открытие файла.
    80 00000004 48BF-                         mov    rdi, fileName                           ; 1-й аргумент системного вызова с номером 85.
    80 00000006 [0000000000000000] 
    81 0000000E E824030000                    call   createFile
    82 00000013 48890425[0D000000]            mov    qword[FD], rax                          ; Сохранение дескриптора файла.
    83                                  ; Запись в файл #1.
    84 0000001B 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 1.
    85 00000023 48BE-                         mov    rsi, text1                              ; 2-й аргумент системного вызова с номером 1.
    85 00000025 [1500000000000000] 
    86 0000002D 488B1425[2E000000]            mov    rdx, qword[len1]                        ; 3-й аргумент системного вызова с номером 1.
    87 00000035 E876020000                    call   writeFile
    88                                  ; Закрытие файла.
    89 0000003A 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 3.
    90 00000042 E8C3020000                    call   closeFile
    91                                  %ENDIF
    92                                  %IF OVERWRITE
    93                                  ; ОТКРЫТИЕ И ПЕРЕЗАПИСЬ ФАЙЛА, ЗАТЕМ ЗАКРЫТИЕ. -------------------------------------
    94                                  ; Открытие файла.
    95 00000047 48BF-                         mov    rdi, fileName                           ; 1-й аргумент системного вызова с номером 2.
    95 00000049 [0000000000000000] 
    96 00000051 E826020000                    call   openFile
    97 00000056 48890425[0D000000]            mov    qword[FD], rax                          ; Сохранение дескриптора файла.
    98                                  ; Запись в файл #2 - ПЕРЕЗАПИСЬ (ЗАМЕЩЕНИЕ)!
    99 0000005E 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 1.
   100 00000066 48BE-                         mov    rsi, text2                              ; 2-й аргумент системного вызова с номером 1.
   100 00000068 [3600000000000000] 
   101 00000070 488B1425[45000000]            mov    rdx, qword[len2]                        ; 3-й аргумент системного вызова с номером 1.
   102 00000078 E833020000                    call   writeFile
   103                                  ; Закрытие файла.
   104 0000007D 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 3.
   105 00000085 E880020000                    call   closeFile
   106                                  %ENDIF
   107                                  %IF APPEND
   108                                  ; ОТКРЫТИЕ И ДОБАВЛЕНИЕ В ФАЙЛ, ЗАТЕМ ЗАКРЫТИЕ. ------------------------------------
   109                                  ; Открытие файла для добавления в него данных.
   110 0000008A 48BF-                         mov     rdi, fileName                          ; 1-й аргумент системного вызова с номером 2.
   110 0000008C [0000000000000000] 
   111 00000094 E8AF010000                    call    appendFile     
   112 00000099 48890425[0D000000]            mov     qword[FD], rax                         ; Сохранение дескриптора файла.
   113                                  ; Запись в файл #3 - ДОБАВЛЕНИЕ! 
   114 000000A1 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 1.
   115 000000A9 48BE-                         mov    rsi, text3                              ; 2-й аргумент системного вызова с номером 1.
   115 000000AB [4D00000000000000] 
   116 000000B3 488B1425[64000000]            mov    rdx, qword[len3]                        ; 3-й аргумент системного вызова с номером 1.
   117 000000BB E8F0010000                    call   writeFile
   118                                  ; Закрытие файла.
   119 000000C0 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 3.
   120 000000C8 E83D020000                    call   closeFile
   121                                  %ENDIF
   122                                  %IF O_WRITE
   123                                  ; ОТКРЫТИЕ И ПЕРЕЗАПИСЬ ПО ПОЗИЦИИ СМЕЩЕНИЯ В ФАЙЛЕ, ЗАТЕМ ЗАКРЫТИЕ. ---------------
   124                                  ; Открытие файла для записи.
   125 000000CD 48BF-                         mov    rdi, fileName                           ; 1-й аргумент системного вызова с номером 2.
   125 000000CF [0000000000000000] 
   126 000000D7 E8A0010000                    call   openFile
   127 000000DC 48890425[0D000000]            mov    qword[FD], rax                          ; Сохранение дескриптора файла.
   128                                  ; Позиция в файле, определяемая по смещению.
   129 000000E4 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 8.
   130 000000EC 488B3425[45000000]            mov    rsi, qword[len2]                        ; 2-й аргумент системного вызова с номером 8. Смещение в заданную позицию.
   131 000000F4 BA00000000                    mov    rdx, 0                                  ; 3-й аргумент системного вызова с номером 8.
   132 000000F9 E8DF010000                    call   positionFile
   133                                  ; Запись в файл в позицию с заданным смещением.
   134 000000FE 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 1.
   135 00000106 48BE-                         mov    rsi, text4                              ; 2-й аргумент системного вызова с номером 1.
   135 00000108 [6C00000000000000] 
   136 00000110 488B1425[76000000]            mov    rdx, qword[len4]                        ; 3-й аргумент системного вызова с номером 1.
   137 00000118 E893010000                    call   writeFile
   138                                  ; Закрытие файла.
   139 0000011D 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 3.
   140 00000125 E8E0010000                    call   closeFile
   141                                  %ENDIF
   142                                  %IF READ
   143                                  ; ОТКРЫТИЕ И ЧТЕНИЕ ИЗ ФАЙЛА, ЗАТЕМ ЗАКРЫТИЕ. --------------------------------------
   144                                  ; Открытие файла для чтения.   
   145 0000012A 48BF-                         mov    rdi, fileName                           ; 1-й аргумент системного вызова с номером 2.
   145 0000012C [0000000000000000] 
   146 00000134 E843010000                    call   openFile
   147 00000139 48890425[0D000000]            mov    qword[FD], rax                          ; Сохранение дескриптора файла.
   148                                  ; Чтение из файла.
   149 00000141 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 0.
   150 00000149 48BE-                         mov    rsi, buffer                             ; 2-й аргумент системного вызова с номером 0.
   150 0000014B [0000000000000000] 
   151 00000153 BA40000000                    mov    rdx, bufferlen                          ; 3-й аргумент системного вызова с номером 0. Количество считываемых символов.
   152 00000158 E888000000                    call   readFile
   153 0000015D 4889C7                        mov    rdi, rax  
   154 00000160 E806020000                    call   printString
   155                                  ; Закрытие файла.
   156 00000165 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 3.
   157 0000016D E898010000                    call   closeFile
   158                                  %ENDIF  
   159                                  %IF O_READ
   160                                  ; ОТКРЫТИЕ И ЧТЕНИЕ В ПОЗИЦИИ, ЗАДАННОЙ СМЕЩЕНИЕМ В ФАЙЛЕ, ЗАТЕМ ЗАКРЫТИЕ. --------
   161                                  ; Открытие файла для чтения.   
   162 00000172 48BF-                         mov    rdi, fileName                           ; 1-й аргумент системного вызова с номером 2.
   162 00000174 [0000000000000000] 
   163 0000017C E8FB000000                    call   openFile
   164 00000181 48890425[0D000000]            mov    qword[FD], rax                          ; Сохранение дескриптора файла.   
   165                                  ; Позиция в файле, определяемая по смещению.
   166 00000189 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 8.
   167 00000191 488B3425[45000000]            mov    rsi, qword[len2]                        ; 2-й аргумент системного вызова с номером 8. Смещение в заданную позицию. Пропустить первую строку.
   168 00000199 BA00000000                    mov    rdx, 0                                  ; 3-й аргумент системного вызова с номером 8.
   169 0000019E E83A010000                    call   positionFile  
   170                                  ; Чтение из файла (в заданной позиции).
   171 000001A3 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 0.
   172 000001AB 48BE-                         mov    rsi, buffer                             ; 2-й аргумент системного вызова с номером 0.
   172 000001AD [0000000000000000] 
   173 000001B5 BA0A000000                    mov    rdx, 10                                 ; 3-й аргумент системного вызова с номером 0. Количество считываемых символов.
   174 000001BA E826000000                    call   readFile
   175 000001BF 4889C7                        mov    rdi, rax  
   176 000001C2 E8A4010000                    call   printString
   177                                  ; Закрытие файла.
   178 000001C7 488B3C25[0D000000]            mov    rdi, qword[FD]                          ; 1-й аргумент системного вызова с номером 3.
   179 000001CF E836010000                    call   closeFile
   180                                  %ENDIF 
   181                                  %IF DELETE
   182                                  ; УДАЛЕНИЕ ФАЙЛА. -----------------------------------------------------------------
   183                                  ; Удаление файла. ДЛЯ ИСПОЛЬЗОВАНИЯ УБРАТЬ СИМВОЛЫ КОММЕНТАРИЕВ В СЛЕДУЮЩИХ СТРОКАХ.
   184 000001D4 48BF-                         mov    rdi, fileName
   184 000001D6 [0000000000000000] 
   185 000001DE E838000000                    call   deleteFile
   186                                  %ENDIF
   187 000001E3 C9                      leave
   188 000001E4 C3                      ret
   189                                  ; ФУНКЦИИ ОБРАБОТКИ ФАЙЛА. --------------------------------------------------------
   190                                  ;----------------------------------------------------------------------------------
   191                                  global readFile
   192                                  readFile:
   193 000001E5 B800000000                    mov   rax, NR_read
   194 000001EA 0F05                          syscall                                        ; rax содержит количество считываемых символов.
   195 000001EC 4883F800                      cmp   rax, 0
   196 000001F0 7C19                          jl    readerror
   197 000001F2 C6040600                      mov   byte[rsi+rax], 0                         ; Добавление завершающего нуля.
   198 000001F6 4889F0                        mov   rax, rsi
   199 000001F9 48BF-                         mov   rdi, success_Read
   199 000001FB [BC01000000000000] 
   200 00000203 50                            push  rax                                      ; Регистр, сохраняемый вызывающей функцией.
   201 00000204 E862010000                    call  printString
   202 00000209 58                            pop   rax                                      ; Регистр, сохраняемый вызывающей функцией.
   203 0000020A C3                            ret
   204                                  readerror:
   205 0000020B 48BF-                         mov   rdi, error_Read
   205 0000020D [0001000000000000] 
   206 00000215 E851010000                    call  printString
   207 0000021A C3                            ret
   208                                  ;----------------------------------------------------------------------------------
   209                                  global deleteFile
   210                                  deleteFile:
   211 0000021B B857000000                    mov    rax, NR_unlink
   212 00000220 0F05                          syscall
   213 00000222 4883F800                      cmp    rax, 0
   214 00000226 7C10                          jl     deleteerror
   215 00000228 48BF-                         mov    rdi, success_Delete
   215 0000022A [AE01000000000000] 
   216 00000232 E834010000                    call   printString
   217 00000237 C3                            ret
   218                                  deleteerror:
   219 00000238 48BF-                         mov    rdi, error_Delete
   219 0000023A [EB00000000000000] 
   220 00000242 E824010000                    call   printString
   221 00000247 C3                            ret
   222                                  ;---------------------------------------------------------------------------------- 
   223                                  global appendFile
   224                                  appendFile:
   225 00000248 B802000000                    mov    rax, NR_open
   226 0000024D BE02040000                    mov    rsi, O_RDWR | O_APPEND
   227 00000252 0F05                          syscall
   228 00000254 4883F800                      cmp    rax, 0
   229 00000258 7C12                          jl     appenderror 
   230 0000025A 48BF-                         mov    rdi, success_Append
   230 0000025C [9301000000000000] 
   231 00000264 50                            push   rax                                      ; Регистр, сохраняемый вызывающей функцией.
   232 00000265 E801010000                    call   printString
   233 0000026A 58                            pop    rax                                      ; Регистр, сохраняемый вызывающей функцией.
   234 0000026B C3                            ret
   235                                  appenderror:
   236 0000026C 48BF-                         mov    rdi, error_Append
   236 0000026E [D200000000000000] 
   237 00000276 E8F0000000                    call   printString
   238 0000027B C3                            ret
   239                                  ;----------------------------------------------------------------------------------  
   240                                  global openFile
   241                                  openFile:
   242 0000027C B802000000                    mov    rax, NR_open
   243 00000281 BE02000000                    mov    rsi, O_RDWR
   244 00000286 0F05                          syscall
   245 00000288 4883F800                      cmp    rax, 0
   246 0000028C 7C12                          jl     openerror
   247 0000028E 48BF-                         mov    rdi, success_Open
   247 00000290 [7E01000000000000] 
   248 00000298 50                            push   rax                                      ; Регистр, сохраняемый вызывающей функцией.
   249 00000299 E8CD000000                    call   printString
   250 0000029E 58                            pop    rax                                      ; Регистр, сохраняемый вызывающей функцией.
   251 0000029F C3                            ret
   252                                  openerror:
   253 000002A0 48BF-                         mov    rdi, error_Open
   253 000002A2 [BE00000000000000] 
   254 000002AA E8BC000000                    call   printString
   255 000002AF C3                            ret 
   256                                  ;----------------------------------------------------------------------------------
   257                                  global writeFile
   258                                  writeFile:
   259 000002B0 B801000000                    mov    rax, NR_write
   260 000002B5 0F05                          syscall
   261 000002B7 4883F800                      cmp    rax, 0
   262 000002BB 7C10                          jl     writeerror
   263 000002BD 48BF-                         mov    rdi, success_Write
   263 000002BF [6D01000000000000] 
   264 000002C7 E89F000000                    call   printString
   265 000002CC C3                            ret
   266                                  writeerror:
   267 000002CD 48BF-                         mov    rdi, error_Write   
   267 000002CF [A700000000000000] 
   268 000002D7 E88F000000                    call   printString
   269 000002DC C3                            ret 
   270                                  ;---------------------------------------------------------------------------------- 
   271                                  global positionFile
   272                                  positionFile:
   273 000002DD B808000000                    mov    rax, NR_lseek
   274 000002E2 0F05                          syscall
   275 000002E4 4883F800                      cmp    rax, 0
   276 000002E8 7C10                          jl     positionerror
   277 000002EA 48BF-                         mov    rdi, success_Position
   277 000002EC [CA01000000000000] 
   278 000002F4 E872000000                    call   printString
   279 000002F9 C3                            ret
   280                                  positionerror:
   281 000002FA 48BF-                         mov    rdi, error_Position
   281 000002FC [2B01000000000000] 
   282 00000304 E862000000                    call   printString
   283 00000309 C3                            ret
   284                                  ;----------------------------------------------------------------------------------  
   285                                  global closeFile
   286                                  closeFile:
   287 0000030A B803000000                    mov    rax, NR_close
   288 0000030F 0F05                          syscall
   289 00000311 4883F800                      cmp    rax, 0
   290 00000315 7C10                          jl     closeerror
   291 00000317 48BF-                         mov    rdi, success_Close
   291 00000319 [5F01000000000000] 
   292 00000321 E845000000                    call   printString
   293 00000326 C3                            ret
   294                                  closeerror:
   295 00000327 48BF-                         mov    rdi, error_Close
   295 00000329 [9300000000000000] 
   296 00000331 E835000000                    call   printString
   297 00000336 C3                            ret
   298                                  ;---------------------------------------------------------------------------------- 
   299                                  global createFile
   300                                  createFile:
   301 00000337 B855000000                    mov    rax, NR_create                           ; Номер системного вызова 85.
   302 0000033C BE80010000                    mov    rsi, S_IRUSR | S_IWUSR                   ; 2-й аргумент системного вызова с номером 85.
   303 00000341 0F05                          syscall
   304 00000343 4883F800                      cmp    rax, 0                                   ; Дескриптор файла в регистре rax.
   305 00000347 7C12                          jl     createerror
   306 00000349 48BF-                         mov    rdi, success_Create
   306 0000034B [4601000000000000] 
   307 00000353 50                            push   rax                                      ; Регистр, сохраняемый вызывающей функцией.
   308 00000354 E812000000                    call   printString
   309 00000359 58                            pop    rax                                      ; Регистр, сохраняемый вызывающей функцией.
   310 0000035A C3                            ret
   311                                  createerror:
   312 0000035B 48BF-                         mov    rdi, error_Create
   312 0000035D [7E00000000000000] 
   313 00000365 E801000000                    call   printString
   314 0000036A C3                            ret
   315                                  ; ВЫВОД ИНФОРМАЦИИ О ФАЙЛОВЫХ ОПЕРАЦИЯХ (ОБРАТНОЙ СВЯЗИ).
   316                                  ;----------------------------------------------------------------------------------
   317                                  global printString
   318                                  printString:
   319                                  ; Счетчик символов.
   320 0000036B 4989FC                        mov    r12, rdi
   321 0000036E BA00000000                    mov    rdx, 0
   322                                  strLoop:
   323 00000373 41803C2400                    cmp    byte[r12], 0
   324 00000378 7408                          je     strDone
   325 0000037A 48FFC2                        inc    rdx                                      ; Длина строки в регистре rdx.
   326 0000037D 49FFC4                        inc    r12
   327 00000380 EBF1                          jmp    strLoop
   328                                  strDone:
   329 00000382 4883FA00                      cmp    rdx, 0                                   ; Строка отсутствует (длина 0).
   330 00000386 740F                          je     prtDone
   331 00000388 4889FE                        mov    rsi, rdi                                 ; 2-й аргумент системного вызова с номером 1.
   332 0000038B B801000000                    mov    rax, 1                                   ; Системный вызов с номером 1, 1 = запись.
   333 00000390 BF01000000                    mov    rdi, 1                                   ; 1-й аргумент системного вызова с номером 1, 1 = в поток стандартного вывода stdout.
   334 00000395 0F05                          syscall
   335                                  prtDone:
   336 00000397 C3                            ret
   337                                                               
